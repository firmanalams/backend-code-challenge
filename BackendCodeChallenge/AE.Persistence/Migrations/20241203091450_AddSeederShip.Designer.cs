// <auto-generated />
using System;
using AE.Persistence.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AE.Persistence.Migrations
{
    [DbContext(typeof(AEDatabaseContext))]
    [Migration("20241203091450_AddSeederShip")]
    partial class AddSeederShip
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AE.Domain.Port", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ports");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8938),
                            Latitude = 31.230399999999999,
                            Longitude = 121.47369999999999,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8949),
                            Name = "Port of Shanghai"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8952),
                            Latitude = 1.3521000000000001,
                            Longitude = 103.8198,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8952),
                            Name = "Port of Singapore"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8954),
                            Latitude = 29.868300000000001,
                            Longitude = 121.544,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8956),
                            Name = "Port of Ningbo-Zhoushan"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8957),
                            Latitude = 22.543099999999999,
                            Longitude = 114.0579,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8957),
                            Name = "Port of Shenzhen"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8959),
                            Latitude = 23.129100000000001,
                            Longitude = 113.26439999999999,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8959),
                            Name = "Port of Guangzhou"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8961),
                            Latitude = 35.179600000000001,
                            Longitude = 129.07560000000001,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8961),
                            Name = "Port of Busan"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8963),
                            Latitude = 22.319299999999998,
                            Longitude = 114.1694,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8964),
                            Name = "Port of Hong Kong"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8965),
                            Latitude = 36.067100000000003,
                            Longitude = 120.3826,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8966),
                            Name = "Port of Qingdao"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8967),
                            Latitude = 39.343400000000003,
                            Longitude = 117.3616,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8968),
                            Name = "Port of Tianjin"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8969),
                            Latitude = 51.922499999999999,
                            Longitude = 4.4791999999999996,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8969),
                            Name = "Port of Rotterdam"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8971),
                            Latitude = 25.067399999999999,
                            Longitude = 55.1372,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8971),
                            Name = "Port of Jebel Ali"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8973),
                            Latitude = 53.551099999999998,
                            Longitude = 9.9937000000000005,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8973),
                            Name = "Port of Hamburg"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8974),
                            Latitude = 51.260199999999998,
                            Longitude = 4.4028,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8975),
                            Name = "Port of Antwerp"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8976),
                            Latitude = 33.740499999999997,
                            Longitude = -118.2727,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8977),
                            Name = "Port of Los Angeles"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8979),
                            Latitude = 33.770099999999999,
                            Longitude = -118.19370000000001,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8980),
                            Name = "Port of Long Beach"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8981),
                            Latitude = 1.3622000000000001,
                            Longitude = 103.56829999999999,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8982),
                            Name = "Port of Tanjung Pelepas"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8983),
                            Latitude = 22.627300000000002,
                            Longitude = 120.3014,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8984),
                            Name = "Port of Kaohsiung"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8985),
                            Latitude = 51.963999999999999,
                            Longitude = 1.3513999999999999,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8986),
                            Name = "Port of Felixstowe"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8988),
                            Latitude = 36.140799999999999,
                            Longitude = -5.4561999999999999,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8989),
                            Name = "Port of Algeciras"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8990),
                            Latitude = 35.4437,
                            Longitude = 139.63800000000001,
                            ModifiedAt = new DateTime(2024, 12, 3, 16, 14, 50, 282, DateTimeKind.Local).AddTicks(8990),
                            Name = "Port of Yokohama"
                        });
                });

            modelBuilder.Entity("AE.Domain.Ship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Velocity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Ships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Latitude = 31.231999999999999,
                            Longitude = 121.47450000000001,
                            Name = "Sea Voyager",
                            Velocity = 14.199999999999999
                        },
                        new
                        {
                            Id = 2,
                            Latitude = 1.3540000000000001,
                            Longitude = 103.8205,
                            Name = "Ocean Explorer",
                            Velocity = 16.5
                        },
                        new
                        {
                            Id = 3,
                            Latitude = 29.869499999999999,
                            Longitude = 121.545,
                            Name = "Wave Rider",
                            Velocity = 12.800000000000001
                        },
                        new
                        {
                            Id = 4,
                            Latitude = 22.544,
                            Longitude = 114.0585,
                            Name = "Harbor Queen",
                            Velocity = 10.4
                        },
                        new
                        {
                            Id = 5,
                            Latitude = 23.130500000000001,
                            Longitude = 113.265,
                            Name = "Maritime Spirit",
                            Velocity = 11.300000000000001
                        },
                        new
                        {
                            Id = 6,
                            Latitude = 35.180999999999997,
                            Longitude = 129.07599999999999,
                            Name = "Blue Horizon",
                            Velocity = 9.6999999999999993
                        },
                        new
                        {
                            Id = 7,
                            Latitude = 22.32,
                            Longitude = 114.17,
                            Name = "Silver Anchor",
                            Velocity = 15.1
                        },
                        new
                        {
                            Id = 8,
                            Latitude = 36.067999999999998,
                            Longitude = 120.383,
                            Name = "Pacific Wind",
                            Velocity = 13.4
                        },
                        new
                        {
                            Id = 9,
                            Latitude = 39.344000000000001,
                            Longitude = 117.36199999999999,
                            Name = "Northern Star",
                            Velocity = 12.199999999999999
                        },
                        new
                        {
                            Id = 10,
                            Latitude = 51.923499999999997,
                            Longitude = 4.4800000000000004,
                            Name = "Coastal Runner",
                            Velocity = 14.9
                        });
                });

            modelBuilder.Entity("AE.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ShipUser", b =>
                {
                    b.Property<int>("ShipsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("ShipsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("ShipUser");
                });

            modelBuilder.Entity("ShipUser", b =>
                {
                    b.HasOne("AE.Domain.Ship", null)
                        .WithMany()
                        .HasForeignKey("ShipsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AE.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
